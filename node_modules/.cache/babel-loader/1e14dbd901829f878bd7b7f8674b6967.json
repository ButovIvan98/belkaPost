{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\OSPanel\\\\domains\\\\cargo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getUsers } from \"../API/api\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 50,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst UsersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return _objectSpread({}, u, {\n              followed: true\n            });\n          }\n\n          return u;\n        })\n      });\n\n    case UNFOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return _objectSpread({}, u, {\n              followed: false\n            });\n          }\n\n          return u;\n        })\n      });\n\n    case SET_USERS:\n      return _objectSpread({}, state, {\n        users: [...action.users]\n      });\n\n    case SET_CURRENT_PAGE:\n      return _objectSpread({}, state, {\n        currentPage: action.currentPage\n      });\n\n    case SET_TOTAL_USER_COUNT:\n      return _objectSpread({}, state, {\n        totalUsersCount: action.totalUsers\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    case FOLLOWING_IN_PROGRESS:\n      return _objectSpread({}, state, {\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : [state.followingInProgress.filter(id => id != action.userId)]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = userID => ({\n  type: FOLLOW,\n  userID\n});\nexport const unFollow = userID => ({\n  type: UNFOLLOW,\n  userID\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsers => ({\n  type: SET_TOTAL_USER_COUNT,\n  totalUsers\n});\nexport const setIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const setInFollowing = (followingInProgress, userId) => ({\n  type: FOLLOWING_IN_PROGRESS,\n  followingInProgress,\n  userId\n});\n\nconst getUsersThunk = dispatch => {\n  dispatch.setIsFetching(true);\n  getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n    dispatch.setIsFetching(false);\n    dispatch.setUsers(data.items);\n    dispatch.setTotalUsersCount(data.totalCount);\n  });\n};\n\nexport default UsersReducer;","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/cargo/my-app/src/redux/users-reducer.js"],"names":["getUsers","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","TOGGLE_IS_FETCHING","FOLLOWING_IN_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","UsersReducer","state","action","type","map","u","id","userID","followed","totalUsers","userId","filter","follow","unFollow","setUsers","setCurrentPage","setTotalUsersCount","setIsFetching","setInFollowing","getUsersThunk","dispatch","props","then","data","items","totalCount"],"mappings":"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","sourcesContent":["import {getUsers} from \"../API/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS';\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 50,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...action.users]\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsers\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            };\r\n        case FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id != action.userId)]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const follow = (userID) => ({type: FOLLOW, userID});\r\nexport const unFollow = (userID) => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage => ({type: SET_CURRENT_PAGE, currentPage}));\r\nexport const setTotalUsersCount = (totalUsers => ({type: SET_TOTAL_USER_COUNT, totalUsers}));\r\nexport const setIsFetching = (isFetching => ({type: TOGGLE_IS_FETCHING, isFetching}));\r\nexport const setInFollowing = (followingInProgress, userId) => ({type: FOLLOWING_IN_PROGRESS, followingInProgress, userId});\r\nconst getUsersThunk=(dispatch)=>{\r\n    dispatch.setIsFetching(true);\r\n    getUsers(this.props.currentPage,this.props.pageSize).then(data => {\r\n        dispatch.setIsFetching(false);\r\n        dispatch.setUsers(data.items);\r\n        dispatch.setTotalUsersCount(data.totalCount);\r\n    });\r\n}\r\nexport default UsersReducer;"]},"metadata":{},"sourceType":"module"}