{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\OSPanel\\\\domains\\\\moscow\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nlet UPDATE_WIDTH = 'UPDATE_WIDTH';\nlet UPDATE_HEIGHT = 'UPDATE_HEIGHT';\nlet UPDATE_LENGHT = 'UPDATE_LENGHT';\nlet UPDATE_WEIGHT = 'UPDATE_WEIGHT';\nlet UPDATE_QUANTITY = 'UPDATE_QUANTITY';\nlet UPDATE_COMMENT = 'UPDATE_COMMENT';\nlet UPDATE_TYPE = 'UPDATE_TYPE';\nlet ADD_CARGO = 'ADD_CARGO';\nlet initialState = {\n  list: [{\n    widthCargo: 10,\n    heightCargo: 10,\n    lengthCargo: 5,\n    weightCargo: 0.2,\n    quantityCargo: 1,\n    commentCargo: \"parcel\",\n    typeCargo: \"parcel\"\n  }, {\n    widthCargo: 10,\n    heightCargo: 10,\n    lengthCargo: 5,\n    weightCargo: 0.2,\n    quantityCargo: 1,\n    commentCargo: \"parcel\",\n    typeCargo: \"parcel\"\n  }],\n  width: 1,\n  height: 5,\n  length: 5,\n  weight: 2,\n  quantity: 4,\n  comment: 12,\n  type: 4\n};\n\nconst CalculateFormReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_WIDTH:\n      return _objectSpread({}, state, {\n        width: action.bodyWidth\n      });\n\n    case UPDATE_HEIGHT:\n      return _objectSpread({}, state, {\n        height: action.bodyHeight\n      });\n\n    case UPDATE_LENGHT:\n      return _objectSpread({}, state, {\n        length: action.bodyLeght\n      });\n\n    case UPDATE_WEIGHT:\n      return _objectSpread({}, state, {\n        weight: action.bodyWeight\n      });\n\n    case UPDATE_QUANTITY:\n      return _objectSpread({}, state, {\n        quantity: action.bodyQuantity\n      });\n\n    case UPDATE_COMMENT:\n      return _objectSpread({}, state, {\n        comment: action.bodyComment\n      });\n\n    case UPDATE_TYPE:\n      return _objectSpread({}, state, {\n        type: action.bodyType\n      });\n\n    case ADD_CARGO:\n      return {};\n\n    default:\n      return {\n        state\n      };\n  }\n\n  return state;\n};\n\nexport const updateTextWidth = width => ({\n  type: UPDATE_WIDTH,\n  bodyWidth: width\n});\nexport const updateTextHeight = height => ({\n  type: UPDATE_HEIGHT,\n  bodyHeight: height\n});\nexport const updateTextLenght = lenght => ({\n  type: UPDATE_LENGHT,\n  bodyLeght: lenght\n});\nexport const updateTextWeight = weight => ({\n  type: UPDATE_WEIGHT,\n  bodyWeight: weight\n});\nexport const updateTextQuantity = quantity => ({\n  type: UPDATE_QUANTITY,\n  bodyQuantity: quantity\n});\nexport const updateTextComment = comment => ({\n  type: UPDATE_COMMENT,\n  bodyComment: comment\n});\nexport const updateTextType = type => ({\n  type: UPDATE_TYPE,\n  bodyType: type\n});\nexport default CalculateFormReducer;","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/moscow/src/redux/calculateFormReducer.js"],"names":["UPDATE_WIDTH","UPDATE_HEIGHT","UPDATE_LENGHT","UPDATE_WEIGHT","UPDATE_QUANTITY","UPDATE_COMMENT","UPDATE_TYPE","ADD_CARGO","initialState","list","widthCargo","heightCargo","lengthCargo","weightCargo","quantityCargo","commentCargo","typeCargo","width","height","length","weight","quantity","comment","type","CalculateFormReducer","state","action","bodyWidth","bodyHeight","bodyLeght","bodyWeight","bodyQuantity","bodyComment","bodyType","updateTextWidth","updateTextHeight","updateTextLenght","lenght","updateTextWeight","updateTextQuantity","updateTextComment","updateTextType"],"mappings":"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","sourcesContent":["let UPDATE_WIDTH = 'UPDATE_WIDTH';\r\nlet UPDATE_HEIGHT = 'UPDATE_HEIGHT';\r\nlet UPDATE_LENGHT = 'UPDATE_LENGHT';\r\nlet UPDATE_WEIGHT = 'UPDATE_WEIGHT';\r\nlet UPDATE_QUANTITY = 'UPDATE_QUANTITY';\r\nlet UPDATE_COMMENT = 'UPDATE_COMMENT';\r\nlet UPDATE_TYPE = 'UPDATE_TYPE';\r\nlet ADD_CARGO = 'ADD_CARGO';\r\nlet initialState = {\r\n    list: [\r\n        {\r\n            widthCargo: 10,\r\n            heightCargo: 10,\r\n            lengthCargo: 5,\r\n            weightCargo: 0.2,\r\n            quantityCargo: 1,\r\n            commentCargo: \"parcel\",\r\n            typeCargo: \"parcel\"\r\n        },\r\n        {\r\n            widthCargo: 10,\r\n            heightCargo: 10,\r\n            lengthCargo: 5,\r\n            weightCargo: 0.2,\r\n            quantityCargo: 1,\r\n            commentCargo: \"parcel\",\r\n            typeCargo: \"parcel\"\r\n        },\r\n    ],\r\n    width: 1,\r\n    height: 5,\r\n    length: 5,\r\n    weight: 2,\r\n    quantity: 4,\r\n    comment: 12,\r\n    type: 4,\r\n}\r\nconst CalculateFormReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_WIDTH:\r\n            return {\r\n                ...state,\r\n                width: action.bodyWidth\r\n            }\r\n        case UPDATE_HEIGHT:\r\n            return {\r\n                ...state,\r\n                height: action.bodyHeight\r\n            }\r\n        case UPDATE_LENGHT:\r\n            return {\r\n                ...state,\r\n                length: action.bodyLeght\r\n            }\r\n        case UPDATE_WEIGHT:\r\n            return {\r\n                ...state,\r\n                weight: action.bodyWeight\r\n            }\r\n        case UPDATE_QUANTITY:\r\n            return {\r\n                ...state,\r\n                quantity:action.bodyQuantity\r\n            }\r\n        case UPDATE_COMMENT:\r\n            return {\r\n                ...state,\r\n                comment: action.bodyComment\r\n            }\r\n        case UPDATE_TYPE:\r\n            return {\r\n                ...state,\r\n                type:action.bodyType\r\n            }\r\n        case ADD_CARGO:\r\n            return {\r\n                \r\n            }\r\n        default:\r\n                return {\r\n                    state\r\n                }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const updateTextWidth = (width) => ({type: UPDATE_WIDTH, bodyWidth: width});\r\nexport const updateTextHeight = (height) => ({type: UPDATE_HEIGHT, bodyHeight: height});\r\nexport const updateTextLenght = (lenght) => ({type: UPDATE_LENGHT, bodyLeght: lenght});\r\nexport const updateTextWeight = (weight) => ({type: UPDATE_WEIGHT, bodyWeight: weight});\r\nexport const updateTextQuantity = (quantity) => ({type: UPDATE_QUANTITY, bodyQuantity: quantity});\r\nexport const updateTextComment = (comment) => ({type: UPDATE_COMMENT, bodyComment: comment});\r\nexport const updateTextType = (type) => ({type: UPDATE_TYPE, bodyType: type});\r\n\r\nexport default CalculateFormReducer;"]},"metadata":{},"sourceType":"module"}