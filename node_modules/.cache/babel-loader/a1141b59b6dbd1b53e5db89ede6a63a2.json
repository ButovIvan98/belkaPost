{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\OSPanel\\\\domains\\\\moscow\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst ADD_STATUS_TRUE = 'ADD_STATUS_TRUE';\nconst ADD_STATUS_FALSE = 'ADD_STATUS_FALSE';\nconst UPDATE_TEXT_INPUT_COUNTRY = 'UPDATE_TEXT_INPUT_COUNTRY'; //Страна\n\nconst UPDATE_TEXT_INPUT_CITY = 'UPDATE_TEXT_INPUT_CITY'; //Город\n\nconst UPDATE_TEXT_INPUT_STREET = 'UPDATE_TEXT_INPUT_STREET'; //Улица\n\nconst UPDATE_TEXT_INPUT_HOUSE = 'UPDATE_TEXT_INPUT_HOUSE'; //Дом, корпус\n\nconst UPDATE_TEXT_INPUT_FLAT = 'UPDATE_TEXT_INPUT_FLAT'; //Квартира/Офис\n\nconst UPDATE_TEXT_INPUT_INDEX = 'UPDATE_TEXT_INPUT_INDEX'; //Индекс\n\nconst initialState = {\n  country: '',\n  countryValid: false,\n  city: 'Барнаул',\n  cityValid: false,\n  street: 'Баварина',\n  streetValid: false,\n  house: '2',\n  houseValid: false,\n  flat: '900',\n  flatValid: false,\n  index: '658666',\n  indexValid: false\n};\n\nconst AddressReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_TEXT_INPUT_COUNTRY:\n      return _objectSpread({}, state, {\n        country: action.bodyCountry\n      });\n\n    case UPDATE_TEXT_INPUT_CITY:\n      return _objectSpread({}, state, {\n        city: action.bodyCity\n      });\n\n    case UPDATE_TEXT_INPUT_STREET:\n      return _objectSpread({}, state, {\n        street: action.bodyStreet\n      });\n\n    case UPDATE_TEXT_INPUT_HOUSE:\n      return _objectSpread({}, state, {\n        house: action.bodyHouse\n      });\n\n    case UPDATE_TEXT_INPUT_FLAT:\n      return _objectSpread({}, state, {\n        flat: action.bodyFlat\n      });\n\n    case UPDATE_TEXT_INPUT_INDEX:\n      return _objectSpread({}, state, {\n        index: action.bodyIndex\n      });\n\n    default:\n      return state;\n  }\n}; // export const getStatusTrue = () => ({type:ADD_STATUS_TRUE});\n// export const getStatusFalse = () => ({type:ADD_STATUS_FALSE});\n\n\nexport const updateTextCountry = country => ({\n  type: UPDATE_TEXT_INPUT_COUNTRY,\n  bodyCountry: country\n});\nexport const updateTextCity = city => ({\n  type: UPDATE_TEXT_INPUT_CITY,\n  bodyCity: city\n});\nexport const updateTextStreet = street => ({\n  type: UPDATE_TEXT_INPUT_STREET,\n  bodyStreet: street\n});\nexport const updateTextHouse = house => ({\n  type: UPDATE_TEXT_INPUT_HOUSE,\n  bodyHouse: house\n});\nexport const updateTextFlat = flat => ({\n  type: UPDATE_TEXT_INPUT_FLAT,\n  bodyFlat: flat\n});\nexport const updateTextIndex = index => ({\n  type: UPDATE_TEXT_INPUT_INDEX,\n  bodyIndex: index\n});\nexport const ValidCountry = text => {\n  if (initialState.country !== '') {\n    return dispatch => {\n      dispatch(updateTextCountry());\n    };\n  } else {}\n}; // export const UpdateStatusTrue=()=>{\n//     return(dispatch)=>{\n//\n//         dispatch(getStatusTrue());\n//     }\n// };\n// export const UpdateStatusFalse=()=>{\n//     return(dispatch)=>{\n//         debugger\n//         dispatch(getStatusFalse());\n//     }\n// };\n\nexport default AddressReducer;","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/moscow/src/redux/addressReducer.js"],"names":["ADD_STATUS_TRUE","ADD_STATUS_FALSE","UPDATE_TEXT_INPUT_COUNTRY","UPDATE_TEXT_INPUT_CITY","UPDATE_TEXT_INPUT_STREET","UPDATE_TEXT_INPUT_HOUSE","UPDATE_TEXT_INPUT_FLAT","UPDATE_TEXT_INPUT_INDEX","initialState","country","countryValid","city","cityValid","street","streetValid","house","houseValid","flat","flatValid","index","indexValid","AddressReducer","state","action","type","bodyCountry","bodyCity","bodyStreet","bodyHouse","bodyFlat","bodyIndex","updateTextCountry","updateTextCity","updateTextStreet","updateTextHouse","updateTextFlat","updateTextIndex","ValidCountry","text","dispatch"],"mappings":";;;;;;AAAA,MAAMA,eAAe,GAAG,iBAAxB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,yBAAyB,GAAG,2BAAlC,C,CAA8D;;AAC9D,MAAMC,sBAAsB,GAAG,wBAA/B,C,CAAwD;;AACxD,MAAMC,wBAAwB,GAAG,0BAAjC,C,CAA4D;;AAC5D,MAAMC,uBAAuB,GAAG,yBAAhC,C,CAA0D;;AAC1D,MAAMC,sBAAsB,GAAG,wBAA/B,C,CAAwD;;AACxD,MAAMC,uBAAuB,GAAG,yBAAhC,C,CAA0D;;AAE1D,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,YAAY,EAAE,KAFG;AAGjBC,EAAAA,IAAI,EAAE,SAHW;AAIjBC,EAAAA,SAAS,EAAE,KAJM;AAKjBC,EAAAA,MAAM,EAAE,UALS;AAMjBC,EAAAA,WAAW,EAAE,KANI;AAOjBC,EAAAA,KAAK,EAAE,GAPU;AAQjBC,EAAAA,UAAU,EAAE,KARK;AASjBC,EAAAA,IAAI,EAAE,KATW;AAUjBC,EAAAA,SAAS,EAAE,KAVM;AAWjBC,EAAAA,KAAK,EAAE,QAXU;AAYjBC,EAAAA,UAAU,EAAE;AAZK,CAArB;;AAcA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGd,YAAT,EAAuBe,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKtB,yBAAL;AACI,+BACOoB,KADP;AAEIb,QAAAA,OAAO,EAAEc,MAAM,CAACE;AAFpB;;AAIJ,SAAKtB,sBAAL;AACI,+BACOmB,KADP;AAEIX,QAAAA,IAAI,EAAEY,MAAM,CAACG;AAFjB;;AAIJ,SAAKtB,wBAAL;AACI,+BACOkB,KADP;AAEIT,QAAAA,MAAM,EAAEU,MAAM,CAACI;AAFnB;;AAIJ,SAAKtB,uBAAL;AACI,+BACOiB,KADP;AAEIP,QAAAA,KAAK,EAAEQ,MAAM,CAACK;AAFlB;;AAIJ,SAAKtB,sBAAL;AACI,+BACOgB,KADP;AAEIL,QAAAA,IAAI,EAAEM,MAAM,CAACM;AAFjB;;AAIJ,SAAKtB,uBAAL;AACI,+BACOe,KADP;AAEIH,QAAAA,KAAK,EAAEI,MAAM,CAACO;AAFlB;;AAIJ;AACI,aAAOR,KAAP;AAhCR;AAkCH,CAnCD,C,CAqCA;AACA;;;AACA,OAAO,MAAMS,iBAAiB,GAAItB,OAAD,KAAc;AAACe,EAAAA,IAAI,EAAEtB,yBAAP;AAAkCuB,EAAAA,WAAW,EAAEhB;AAA/C,CAAd,CAA1B;AACP,OAAO,MAAMuB,cAAc,GAAIrB,IAAD,KAAW;AAACa,EAAAA,IAAI,EAAErB,sBAAP;AAA+BuB,EAAAA,QAAQ,EAAEf;AAAzC,CAAX,CAAvB;AACP,OAAO,MAAMsB,gBAAgB,GAAIpB,MAAD,KAAa;AAACW,EAAAA,IAAI,EAAEpB,wBAAP;AAAiCuB,EAAAA,UAAU,EAAEd;AAA7C,CAAb,CAAzB;AACP,OAAO,MAAMqB,eAAe,GAAInB,KAAD,KAAY;AAACS,EAAAA,IAAI,EAAEnB,uBAAP;AAAgCuB,EAAAA,SAAS,EAAEb;AAA3C,CAAZ,CAAxB;AACP,OAAO,MAAMoB,cAAc,GAAIlB,IAAD,KAAW;AAACO,EAAAA,IAAI,EAAElB,sBAAP;AAA+BuB,EAAAA,QAAQ,EAAEZ;AAAzC,CAAX,CAAvB;AACP,OAAO,MAAMmB,eAAe,GAAIjB,KAAD,KAAY;AAACK,EAAAA,IAAI,EAAEjB,uBAAP;AAAgCuB,EAAAA,SAAS,EAAEX;AAA3C,CAAZ,CAAxB;AAGP,OAAO,MAAMkB,YAAY,GAAIC,IAAD,IAAU;AAElC,MAAI9B,YAAY,CAACC,OAAb,KAAyB,EAA7B,EAAiC;AAC7B,WAAQ8B,QAAD,IAAc;AACjBA,MAAAA,QAAQ,CAACR,iBAAiB,EAAlB,CAAR;AACH,KAFD;AAGH,GAJD,MAIO,CAEN;AACJ,CATM,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeV,cAAf","sourcesContent":["const ADD_STATUS_TRUE = 'ADD_STATUS_TRUE';\r\nconst ADD_STATUS_FALSE = 'ADD_STATUS_FALSE';\r\nconst UPDATE_TEXT_INPUT_COUNTRY = 'UPDATE_TEXT_INPUT_COUNTRY';//Страна\r\nconst UPDATE_TEXT_INPUT_CITY = 'UPDATE_TEXT_INPUT_CITY';//Город\r\nconst UPDATE_TEXT_INPUT_STREET = 'UPDATE_TEXT_INPUT_STREET';//Улица\r\nconst UPDATE_TEXT_INPUT_HOUSE = 'UPDATE_TEXT_INPUT_HOUSE';//Дом, корпус\r\nconst UPDATE_TEXT_INPUT_FLAT = 'UPDATE_TEXT_INPUT_FLAT';//Квартира/Офис\r\nconst UPDATE_TEXT_INPUT_INDEX = 'UPDATE_TEXT_INPUT_INDEX';//Индекс\r\n\r\nconst initialState = {\r\n    country: '',\r\n    countryValid: false,\r\n    city: 'Барнаул',\r\n    cityValid: false,\r\n    street: 'Баварина',\r\n    streetValid: false,\r\n    house: '2',\r\n    houseValid: false,\r\n    flat: '900',\r\n    flatValid: false,\r\n    index: '658666',\r\n    indexValid: false,\r\n};\r\nconst AddressReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_TEXT_INPUT_COUNTRY:\r\n            return {\r\n                ...state,\r\n                country: action.bodyCountry\r\n            };\r\n        case UPDATE_TEXT_INPUT_CITY:\r\n            return {\r\n                ...state,\r\n                city: action.bodyCity\r\n            };\r\n        case UPDATE_TEXT_INPUT_STREET:\r\n            return {\r\n                ...state,\r\n                street: action.bodyStreet\r\n            };\r\n        case UPDATE_TEXT_INPUT_HOUSE:\r\n            return {\r\n                ...state,\r\n                house: action.bodyHouse\r\n            };\r\n        case UPDATE_TEXT_INPUT_FLAT:\r\n            return {\r\n                ...state,\r\n                flat: action.bodyFlat\r\n            };\r\n        case UPDATE_TEXT_INPUT_INDEX:\r\n            return {\r\n                ...state,\r\n                index: action.bodyIndex\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// export const getStatusTrue = () => ({type:ADD_STATUS_TRUE});\r\n// export const getStatusFalse = () => ({type:ADD_STATUS_FALSE});\r\nexport const updateTextCountry = (country) => ({type: UPDATE_TEXT_INPUT_COUNTRY, bodyCountry: country});\r\nexport const updateTextCity = (city) => ({type: UPDATE_TEXT_INPUT_CITY, bodyCity: city});\r\nexport const updateTextStreet = (street) => ({type: UPDATE_TEXT_INPUT_STREET, bodyStreet: street});\r\nexport const updateTextHouse = (house) => ({type: UPDATE_TEXT_INPUT_HOUSE, bodyHouse: house});\r\nexport const updateTextFlat = (flat) => ({type: UPDATE_TEXT_INPUT_FLAT, bodyFlat: flat});\r\nexport const updateTextIndex = (index) => ({type: UPDATE_TEXT_INPUT_INDEX, bodyIndex: index});\r\n\r\n\r\nexport const ValidCountry = (text) => {\r\n\r\n    if (initialState.country !== '') {\r\n        return (dispatch) => {\r\n            dispatch(updateTextCountry())\r\n        }\r\n    } else {\r\n\r\n    }\r\n}\r\n// export const UpdateStatusTrue=()=>{\r\n//     return(dispatch)=>{\r\n//\r\n//         dispatch(getStatusTrue());\r\n//     }\r\n// };\r\n// export const UpdateStatusFalse=()=>{\r\n//     return(dispatch)=>{\r\n//         debugger\r\n//         dispatch(getStatusFalse());\r\n//     }\r\n// };\r\nexport default AddressReducer;"]},"metadata":{},"sourceType":"module"}