{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OSPanel\\\\domains\\\\moscow\\\\src\\\\components\\\\express\\\\main-page\\\\calculateForm\\\\calculateForm.js\";\nimport React from 'react';\nimport { ReactDadata } from \"react-dadata\";\n\nconst CalculateForm = props => {\n  let width = e => {\n    props.updateTextWidth(e.target.value);\n  };\n\n  let height = e => {\n    props.updateTextHeight(e.target.value);\n  };\n\n  let length = e => {\n    props.updateTextLength(e.target.value);\n  };\n\n  let weight = e => {\n    props.updateTextWeight(e.target.value);\n  };\n\n  let quantity = e => {\n    props.updateTextQuantity(e.target.value);\n  };\n\n  let comment = e => {\n    props.updateTextComment(e.target.value);\n  };\n\n  let addCargoData = () => {\n    props.addCargo(parseFloat(props.calculateForm.width), parseFloat(props.calculateForm.height), parseFloat(props.calculateForm.length), parseFloat(props.calculateForm.weight), parseInt(props.calculateForm.quantity), props.calculateForm.comment, props.calculateForm.type);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: 'Ширина',\n    onChange: width,\n    value: props.calculateForm.width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: 'Высота',\n    onChange: height,\n    value: props.calculateForm.height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: 'Длина',\n    onChange: length,\n    value: props.calculateForm.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: 'Вес',\n    onChange: weight,\n    value: props.calculateForm.weight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: 'Количество',\n    onChange: quantity,\n    value: props.calculateForm.quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: 'Комментарий',\n    onChange: comment,\n    value: props.calculateForm.comment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addCargoData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n};\n\nexport default CalculateForm;","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/moscow/src/components/express/main-page/calculateForm/calculateForm.js"],"names":["React","ReactDadata","CalculateForm","props","width","e","updateTextWidth","target","value","height","updateTextHeight","length","updateTextLength","weight","updateTextWeight","quantity","updateTextQuantity","comment","updateTextComment","addCargoData","addCargo","parseFloat","calculateForm","parseInt","type"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {ReactDadata} from \"react-dadata\";\r\n\r\nconst CalculateForm = (props) => {\r\n\r\n    let width = (e) => {\r\n        props.updateTextWidth(e.target.value);\r\n    };\r\n    let height = (e) => {\r\n        props.updateTextHeight(e.target.value);\r\n    };\r\n    let length = (e) => {\r\n        props.updateTextLength(e.target.value);\r\n    };\r\n    let weight = (e) => {\r\n        props.updateTextWeight(e.target.value);\r\n    };\r\n    let quantity = (e) => {\r\n        props.updateTextQuantity(e.target.value);\r\n    };\r\n    let comment = (e) => {\r\n        props.updateTextComment(e.target.value);\r\n    };\r\n    let addCargoData = () => {\r\n        props.addCargo(parseFloat(props.calculateForm.width), parseFloat(props.calculateForm.height), parseFloat(props.calculateForm.length), parseFloat(props.calculateForm.weight), parseInt(props.calculateForm.quantity), props.calculateForm.comment, props.calculateForm.type);\r\n    };\r\n    return <div>\r\n        <input placeholder={'Ширина'} onChange={width} value={props.calculateForm.width}/>\r\n        <input placeholder={'Высота'} onChange={height} value={props.calculateForm.height}/>\r\n        <input placeholder={'Длина'} onChange={length} value={props.calculateForm.length}/>\r\n        <input placeholder={'Вес'} onChange={weight} value={props.calculateForm.weight}/>\r\n        <input placeholder={'Количество'} onChange={quantity} value={props.calculateForm.quantity}/>\r\n        <input placeholder={'Комментарий'} onChange={comment} value={props.calculateForm.comment}/>\r\n        <button onClick={addCargoData}>Отправить</button>\r\n    </div>\r\n\r\n}\r\nexport default CalculateForm;"]},"metadata":{},"sourceType":"module"}