{"ast":null,"code":"import * as axios from \"axios\";\nimport Cookies from 'js-cookie';\nconst instance = axios.create({\n  baseURL: 'http://192.168.3.105/api/v1/',\n  Authorization: Cookies.get('authToken')\n});\nexport const userAPI = {\n  getUsers(currentPage, pageSize) {\n    return instance.get(\"users?page=\".concat(currentPage, \"&count=\").concat(pageSize)).then(response => {\n      return response.data;\n    });\n  },\n\n  getMe() {\n    return instance.get(\"auth/me\").then(response => {\n      return response.data;\n    });\n  },\n\n  deleteFollowed(id) {\n    return instance.delete(\"follow/\".concat(id)).then(response => {\n      return response.data;\n    });\n  },\n\n  postFollowed(id) {\n    return instance.post(\"follow/\".concat(id)).then(response => {\n      return response.data;\n    });\n  },\n\n  getProfileData(id) {\n    return instance.get(\"profile/\" + id);\n  }\n\n};\nexport const ProfileAPI = {\n  putStatus(status) {\n    return instance.post('profile/status', {\n      status: status\n    });\n  },\n\n  getStatus(userID) {\n    return instance.get(\"profile/status/\" + userID);\n  }\n\n}; //Регистрация + авторизация\n\nexport const RegistrationAPI = {\n  putRegistration(surname, name, middleName, phone, email, password) {\n    return instance.post('user/auth/logout', {\n      middle: surname,\n      first: name,\n      last: middleName,\n      password: password,\n      email: email,\n      phone: phone\n    }).then();\n  },\n\n  putAthorization(email, password) {\n    return instance.post('user/auth/login', {\n      email: email,\n      password: password\n    });\n  } // putAthorization(email,password){\n  //     return instance.get('user/auth/logout')\n  // }\n\n\n}; //Калькуляция и добавление груза\n\nexport const CalculateAPI = {\n  addСargo(width, height, length, weight, qiantity, comment, type) {\n    debugger;\n    return instance.post('express/cargo/create', {\n      width,\n      height,\n      length,\n      weight,\n      qiantity,\n      comment,\n      type\n    }).then();\n  }\n\n};","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/moscow/src/API/api.js"],"names":["axios","Cookies","instance","create","baseURL","Authorization","get","userAPI","getUsers","currentPage","pageSize","then","response","data","getMe","deleteFollowed","id","delete","postFollowed","post","getProfileData","ProfileAPI","putStatus","status","getStatus","userID","RegistrationAPI","putRegistration","surname","name","middleName","phone","email","password","middle","first","last","putAthorization","CalculateAPI","addСargo","width","height","length","weight","qiantity","comment","type"],"mappings":"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","sourcesContent":["import * as axios from \"axios\";\r\nimport Cookies from 'js-cookie';\r\nconst instance = axios.create({\r\n    baseURL:'http://192.168.3.105/api/v1/',\r\n    Authorization:Cookies.get('authToken')\r\n\r\n});\r\n\r\nexport const userAPI={\r\n    getUsers(currentPage,pageSize){\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response=>{\r\n            return response.data;\r\n        })},\r\n    getMe(){\r\n        return instance.get(`auth/me`).then(response=>{\r\n            return response.data;\r\n        })},\r\n    deleteFollowed(id){\r\n        return  instance.delete(`follow/${id}`).then(response=>{\r\n            return response.data;\r\n        })},\r\n    postFollowed(id){\r\n        return  instance.post(`follow/${id}`).then(response=>{\r\n            return response.data;\r\n        })},\r\n    getProfileData(id){\r\n        return instance.get(`profile/` + id)\r\n    }\r\n};\r\nexport const ProfileAPI = {\r\n    putStatus(status){\r\n        return instance.post('profile/status', {status:status})\r\n    },\r\n    getStatus(userID){\r\n        return  instance.get(`profile/status/`+ userID)\r\n    }\r\n};\r\n//Регистрация + авторизация\r\nexport const RegistrationAPI = {\r\n    putRegistration(surname,name,middleName,phone,email,password){\r\n        return instance.post('user/auth/logout', {middle:surname, first:name, last:middleName, password:password, email:email, phone:phone}).then()\r\n    },\r\n    putAthorization(email,password){\r\n        return instance.post('user/auth/login',{email:email,password:password})\r\n    }\r\n    // putAthorization(email,password){\r\n    //     return instance.get('user/auth/logout')\r\n    // }\r\n};\r\n//Калькуляция и добавление груза\r\nexport const CalculateAPI = {\r\n    addСargo(width,height,length,weight,qiantity,comment,type){\r\n        debugger\r\n        return instance.post('express/cargo/create',{width, height, length, weight, qiantity, comment, type}).then();\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}