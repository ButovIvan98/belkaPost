{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\OSPanel\\\\domains\\\\moscow\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst UPDATE_SURNAME = 'UPDATE_SURNAME';\nconst UPDATE_NAME = 'UPDATE_NAME';\nconst UPDATE_MIDDLE_NAME = 'UPDATE_MIDDLE_NAME';\nconst UPDATE_PHONE = 'UPDATE_PHONE';\nconst UPDATE_EMAIL = 'UPDATE_EMAIL';\nconst UPDATE_PASSWORD = 'UPDATE_PASSWORD';\nlet initialState = {\n  surnameUser: '',\n  nameUser: '',\n  middleName: '',\n  phoneUser: '',\n  emailUser: '',\n  passwordUser: '',\n  newPasswordUser: ''\n};\n\nconst UserReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_SURNAME:\n      return _objectSpread({}, state, {\n        surnameUser: action.surnameBody\n      });\n\n    case UPDATE_NAME:\n  }\n};\n\nexport default UserReducer;","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/moscow/src/redux/userReducer.js"],"names":["UPDATE_SURNAME","UPDATE_NAME","UPDATE_MIDDLE_NAME","UPDATE_PHONE","UPDATE_EMAIL","UPDATE_PASSWORD","initialState","surnameUser","nameUser","middleName","phoneUser","emailUser","passwordUser","newPasswordUser","UserReducer","state","action","type","surnameBody"],"mappings":";;;;;;AAAA,MAAMA,cAAc,GAAC,gBAArB;AACA,MAAMC,WAAW,GAAI,aAArB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAC,EADG;AAEfC,EAAAA,QAAQ,EAAE,EAFK;AAGfC,EAAAA,UAAU,EAAE,EAHG;AAIfC,EAAAA,SAAS,EAAE,EAJI;AAKfC,EAAAA,SAAS,EAAE,EALI;AAMfC,EAAAA,YAAY,EAAE,EANC;AAOfC,EAAAA,eAAe,EAAC;AAPD,CAAnB;;AASA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,cAAL;AACI,+BACOe,KADP;AAEIR,QAAAA,WAAW,EAACS,MAAM,CAACE;AAFvB;;AAIJ,SAAKjB,WAAL;AANJ;AAQH,CATD;;AAUA,eAAea,WAAf","sourcesContent":["const UPDATE_SURNAME='UPDATE_SURNAME';\r\nconst UPDATE_NAME =  'UPDATE_NAME';\r\nconst UPDATE_MIDDLE_NAME = 'UPDATE_MIDDLE_NAME';\r\nconst UPDATE_PHONE = 'UPDATE_PHONE';\r\nconst UPDATE_EMAIL = 'UPDATE_EMAIL';\r\nconst UPDATE_PASSWORD = 'UPDATE_PASSWORD';\r\n\r\nlet initialState = {\r\n    surnameUser:'',\r\n    nameUser: '',\r\n    middleName: '',\r\n    phoneUser: '',\r\n    emailUser: '',\r\n    passwordUser: '',\r\n    newPasswordUser:''\r\n};\r\nconst UserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_SURNAME:\r\n            return{\r\n                ...state,\r\n                surnameUser:action.surnameBody\r\n            }\r\n        case UPDATE_NAME:\r\n    }\r\n}\r\nexport default UserReducer"]},"metadata":{},"sourceType":"module"}