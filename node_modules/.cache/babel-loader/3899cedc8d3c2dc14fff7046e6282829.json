{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'http://192.168.3.105/api/v1/' // headers:{\"API-KEY\":\"e20aac34-0ed5-4a7e-872e-3bec534ebf35\"}\n\n});\nexport const userAPI = {\n  getUsers(currentPage, pageSize) {\n    return instance.get(\"users?page=\".concat(currentPage, \"&count=\").concat(pageSize)).then(response => {\n      return response.data;\n    });\n  },\n\n  getMe() {\n    return instance.get(\"auth/me\").then(response => {\n      return response.data;\n    });\n  },\n\n  deleteFollowed(id) {\n    return instance.delete(\"follow/\".concat(id)).then(response => {\n      return response.data;\n    });\n  },\n\n  postFollowed(id) {\n    return instance.post(\"follow/\".concat(id)).then(response => {\n      return response.data;\n    });\n  },\n\n  getProfileData(id) {\n    return instance.get(\"profile/\" + id);\n  }\n\n};\nexport const ProfileAPI = {\n  putStatus(status) {\n    return instance.post('profile/status', {\n      status: status\n    });\n  },\n\n  getStatus(userID) {\n    return instance.get(\"profile/status/\" + userID);\n  }\n\n};\nexport const RegistrationAPI = {\n  putRegistration(surname, name, middleName, phone, email, password) {\n    console.log(surname, name, middleName, phone, email, password);\n    let user = {\n      middle: surname,\n      first: name,\n      last: middleName,\n      password: password,\n      email: email,\n      number: phone\n    };\n    return axios.post(\"http://192.168.3.105/api/v1/user/auth/signup\", {\n      user\n    }).then(res => {\n      console.log();\n    });\n  }\n\n};","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/my-app/src/API/api.js"],"names":["axios","instance","create","withCredentials","baseURL","userAPI","getUsers","currentPage","pageSize","get","then","response","data","getMe","deleteFollowed","id","delete","postFollowed","post","getProfileData","ProfileAPI","putStatus","status","getStatus","userID","RegistrationAPI","putRegistration","surname","name","middleName","phone","email","password","console","log","user","middle","first","last","number","res"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAC,8BAFkB,CAG1B;;AAH0B,CAAb,CAAjB;AAMA,OAAO,MAAMC,OAAO,GAAC;AACjBC,EAAAA,QAAQ,CAACC,WAAD,EAAaC,QAAb,EAAsB;AAC1B,WAAOP,QAAQ,CAACQ,GAAT,sBAA2BF,WAA3B,oBAAgDC,QAAhD,GAA4DE,IAA5D,CAAiEC,QAAQ,IAAE;AAC9E,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAFM,CAAP;AAEG,GAJU;;AAKjBC,EAAAA,KAAK,GAAE;AACH,WAAOZ,QAAQ,CAACQ,GAAT,YAAwBC,IAAxB,CAA6BC,QAAQ,IAAE;AAC1C,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAFM,CAAP;AAEG,GARU;;AASjBE,EAAAA,cAAc,CAACC,EAAD,EAAI;AACd,WAAQd,QAAQ,CAACe,MAAT,kBAA0BD,EAA1B,GAAgCL,IAAhC,CAAqCC,QAAQ,IAAE;AACnD,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAFO,CAAR;AAEG,GAZU;;AAajBK,EAAAA,YAAY,CAACF,EAAD,EAAI;AACZ,WAAQd,QAAQ,CAACiB,IAAT,kBAAwBH,EAAxB,GAA8BL,IAA9B,CAAmCC,QAAQ,IAAE;AACjD,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAFO,CAAR;AAEG,GAhBU;;AAiBjBO,EAAAA,cAAc,CAACJ,EAAD,EAAI;AACd,WAAOd,QAAQ,CAACQ,GAAT,CAAa,aAAaM,EAA1B,CAAP;AACH;;AAnBgB,CAAd;AAqBP,OAAO,MAAMK,UAAU,GAAG;AACtBC,EAAAA,SAAS,CAACC,MAAD,EAAQ;AACb,WAAOrB,QAAQ,CAACiB,IAAT,CAAc,gBAAd,EAAgC;AAACI,MAAAA,MAAM,EAACA;AAAR,KAAhC,CAAP;AACH,GAHqB;;AAItBC,EAAAA,SAAS,CAACC,MAAD,EAAQ;AACb,WAAQvB,QAAQ,CAACQ,GAAT,CAAa,oBAAmBe,MAAhC,CAAR;AACH;;AANqB,CAAnB;AASP,OAAO,MAAMC,eAAe,GAAG;AAE3BC,EAAAA,eAAe,CAACC,OAAD,EAASC,IAAT,EAAcC,UAAd,EAAyBC,KAAzB,EAA+BC,KAA/B,EAAqCC,QAArC,EAA8C;AACzDC,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAoBC,IAApB,EAAyBC,UAAzB,EAAoCC,KAApC,EAA0CC,KAA1C,EAAgDC,QAAhD;AACA,QAAIG,IAAI,GAAC;AACLC,MAAAA,MAAM,EAACT,OADF;AAELU,MAAAA,KAAK,EAACT,IAFD;AAGLU,MAAAA,IAAI,EAACT,UAHA;AAILG,MAAAA,QAAQ,EAACA,QAJJ;AAKLD,MAAAA,KAAK,EAACA,KALD;AAMLQ,MAAAA,MAAM,EAACT;AANF,KAAT;AAQA,WAAO9B,KAAK,CAACkB,IAAN,iDAA0D;AAACiB,MAAAA;AAAD,KAA1D,EAAkEzB,IAAlE,CAAuE8B,GAAG,IAAE;AAC/EP,MAAAA,OAAO,CAACC,GAAR;AACH,KAFM,CAAP;AAGH;;AAf0B,CAAxB","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL:'http://192.168.3.105/api/v1/',\r\n    // headers:{\"API-KEY\":\"e20aac34-0ed5-4a7e-872e-3bec534ebf35\"}\r\n});\r\n\r\nexport const userAPI={\r\n    getUsers(currentPage,pageSize){\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response=>{\r\n            return response.data;\r\n        })},\r\n    getMe(){\r\n        return instance.get(`auth/me`).then(response=>{\r\n            return response.data;\r\n        })},\r\n    deleteFollowed(id){\r\n        return  instance.delete(`follow/${id}`).then(response=>{\r\n            return response.data;\r\n        })},\r\n    postFollowed(id){\r\n        return  instance.post(`follow/${id}`).then(response=>{\r\n            return response.data;\r\n        })},\r\n    getProfileData(id){\r\n        return instance.get(`profile/` + id)\r\n    }\r\n};\r\nexport const ProfileAPI = {\r\n    putStatus(status){\r\n        return instance.post('profile/status', {status:status})\r\n    },\r\n    getStatus(userID){\r\n        return  instance.get(`profile/status/`+ userID)\r\n    }\r\n\r\n};\r\nexport const RegistrationAPI = {\r\n\r\n    putRegistration(surname,name,middleName,phone,email,password){\r\n        console.log(surname,name,middleName,phone,email,password);\r\n        let user={\r\n            middle:surname,\r\n            first:name,\r\n            last:middleName,\r\n            password:password,\r\n            email:email,\r\n            number:phone\r\n        };\r\n        return axios.post(`http://192.168.3.105/api/v1/user/auth/signup`,{user}).then(res=>{\r\n            console.log()\r\n        })\r\n    }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}