{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\OSPanel\\\\domains\\\\moscow\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { RegistrationAPI, userAPI } from \"../API/api\";\nconst UPDATE_TEXT_LOGIN = 'UPDATE_TEXT_LOGIN';\nconst UPDATE_TEXT_PASSWORD = 'UPDATE_TEXT_PASSWORD';\nconst VALID_PASSWORD = 'VALID_PASSWORD';\nconst VALID_EMAIL = 'VALID_EMAIL';\nlet initialState = {\n  idUser: '',\n  email: '',\n  password: '122',\n  isAuth: false,\n  token: '',\n  validEmail: false,\n  colorEmail: '1px solid #c0e4f9'\n};\n\nconst AuthorezetionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_TEXT_LOGIN:\n      return _objectSpread({}, state, {\n        email: action.emailBody\n      });\n\n    case UPDATE_TEXT_PASSWORD:\n      return _objectSpread({}, state, {\n        password: action.passwordBody\n      });\n\n    case VALID_EMAIL:\n      return _objectSpread({}, state, {\n        validEmail: action.emailValid,\n        colorEmail: action.emailColor\n      });\n\n    case VALID_PASSWORD:\n      return _objectSpread({}, state, {\n        validPassword: action.passwordValid,\n        colorEmail: action.emailColor\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const updateEmail = email => ({\n  type: UPDATE_TEXT_LOGIN,\n  emailBody: email\n});\nexport const updatePassword = password => ({\n  type: UPDATE_TEXT_PASSWORD,\n  passwordBody: password\n});\n\nconst checkValidPassword = password => ({\n  type: VALID_PASSWORD,\n  passwordValid: password\n});\n\nconst checkValidEmail = (email, emailColor) => ({\n  type: VALID_EMAIL,\n  emailValid: email,\n  emailColor: emailColor\n});\n\nexport const validEmail = email => {\n  return dispatch => {\n    if (!/.+@.+\\.[A-Za-z]+$/.test(email)) {\n      dispatch(checkValidEmail(false, '1px solid red'));\n    } else {\n      dispatch(checkValidEmail(true, '1px solid #c0e4f9'));\n    }\n  };\n};\nexport const auth = (email, password) => {\n  return () => {\n    RegistrationAPI.putAthorization(email, password).then(response => {\n      console.log(response.data.data);\n    });\n  };\n};\nexport default AuthorezetionReducer;","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/moscow/src/redux/authReducer.js"],"names":["RegistrationAPI","userAPI","UPDATE_TEXT_LOGIN","UPDATE_TEXT_PASSWORD","VALID_PASSWORD","VALID_EMAIL","initialState","idUser","email","password","isAuth","token","validEmail","colorEmail","AuthorezetionReducer","state","action","type","emailBody","passwordBody","emailValid","emailColor","validPassword","passwordValid","updateEmail","updatePassword","checkValidPassword","checkValidEmail","dispatch","test","auth","putAthorization","then","response","console","log","data"],"mappings":";;;;;;AAAA,SAAQA,eAAR,EAAyBC,OAAzB,QAAuC,YAAvC;AAEA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AAEA,MAAMC,cAAc,GAAC,gBAArB;AACA,MAAMC,WAAW,GAAC,aAAlB;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,EADO;AAEfC,EAAAA,KAAK,EAAE,EAFQ;AAGfC,EAAAA,QAAQ,EAAE,KAHK;AAIfC,EAAAA,MAAM,EAAE,KAJO;AAKfC,EAAAA,KAAK,EAAC,EALS;AAMfC,EAAAA,UAAU,EAAC,KANI;AAOfC,EAAAA,UAAU,EAAC;AAPI,CAAnB;;AAUA,MAAMC,oBAAoB,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,iBAAL;AACI,+BACOa,KADP;AAEIP,QAAAA,KAAK,EAACQ,MAAM,CAACE;AAFjB;;AAIJ,SAAKf,oBAAL;AACI,+BACOY,KADP;AAEIN,QAAAA,QAAQ,EAACO,MAAM,CAACG;AAFpB;;AAIJ,SAAKd,WAAL;AACI,+BACOU,KADP;AAEIH,QAAAA,UAAU,EAACI,MAAM,CAACI,UAFtB;AAGIP,QAAAA,UAAU,EAACG,MAAM,CAACK;AAHtB;;AAKJ,SAAKjB,cAAL;AACI,+BACOW,KADP;AAEIO,QAAAA,aAAa,EAACN,MAAM,CAACO,aAFzB;AAGIV,QAAAA,UAAU,EAACG,MAAM,CAACK;AAHtB;;AAMJ;AACI,aAAON,KAAP;AAzBR;AA2BH,CA5BD;;AA6BA,OAAO,MAAMS,WAAW,GAAIhB,KAAD,KAAY;AAACS,EAAAA,IAAI,EAAEf,iBAAP;AAA0BgB,EAAAA,SAAS,EAACV;AAApC,CAAZ,CAApB;AACP,OAAO,MAAMiB,cAAc,GAAIhB,QAAD,KAAe;AAACQ,EAAAA,IAAI,EAAEd,oBAAP;AAA6BgB,EAAAA,YAAY,EAACV;AAA1C,CAAf,CAAvB;;AACP,MAAMiB,kBAAkB,GAAEjB,QAAD,KAAa;AAACQ,EAAAA,IAAI,EAACb,cAAN;AAAqBmB,EAAAA,aAAa,EAACd;AAAnC,CAAb,CAAzB;;AACA,MAAMkB,eAAe,GAAC,CAACnB,KAAD,EAAOa,UAAP,MAAqB;AAACJ,EAAAA,IAAI,EAACZ,WAAN;AAAkBe,EAAAA,UAAU,EAACZ,KAA7B;AAAmCa,EAAAA,UAAU,EAACA;AAA9C,CAArB,CAAtB;;AAEA,OAAO,MAAMT,UAAU,GAAIJ,KAAD,IAAW;AACjC,SAAQoB,QAAD,IAAc;AACjB,QAAI,CAAC,oBAAoBC,IAApB,CAAyBrB,KAAzB,CAAL,EAAsC;AAClCoB,MAAAA,QAAQ,CAACD,eAAe,CAAC,KAAD,EAAO,eAAP,CAAhB,CAAR;AACH,KAFD,MAEO;AACHC,MAAAA,QAAQ,CAACD,eAAe,CAAC,IAAD,EAAM,mBAAN,CAAhB,CAAR;AACH;AACJ,GAND;AAOH,CARM;AAUP,OAAO,MAAMG,IAAI,GAAC,CAACtB,KAAD,EAAOC,QAAP,KAAkB;AAChC,SAAO,MAAI;AACPT,IAAAA,eAAe,CAAC+B,eAAhB,CAAgCvB,KAAhC,EAAsCC,QAAtC,EAAgDuB,IAAhD,CAAqDC,QAAQ,IAAI;AAC7DC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcA,IAA1B;AACH,KAFD;AAGH,GAJD;AAKH,CANM;AAOP,eAAetB,oBAAf","sourcesContent":["import {RegistrationAPI, userAPI} from \"../API/api\";\r\n\r\nconst UPDATE_TEXT_LOGIN = 'UPDATE_TEXT_LOGIN';\r\nconst UPDATE_TEXT_PASSWORD = 'UPDATE_TEXT_PASSWORD';\r\n\r\nconst VALID_PASSWORD='VALID_PASSWORD';\r\nconst VALID_EMAIL='VALID_EMAIL';\r\nlet initialState = {\r\n    idUser: '',\r\n    email: '',\r\n    password: '122',\r\n    isAuth: false,\r\n    token:'',\r\n    validEmail:false,\r\n    colorEmail:'1px solid #c0e4f9',\r\n\r\n}\r\nconst AuthorezetionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_TEXT_LOGIN:\r\n            return {\r\n                ...state,\r\n                email:action.emailBody\r\n            };\r\n        case UPDATE_TEXT_PASSWORD:\r\n            return {\r\n                ...state,\r\n                password:action.passwordBody\r\n            }\r\n        case VALID_EMAIL:\r\n            return {\r\n                ...state,\r\n                validEmail:action.emailValid,\r\n                colorEmail:action.emailColor\r\n            };\r\n        case VALID_PASSWORD:\r\n            return {\r\n                ...state,\r\n                validPassword:action.passwordValid,\r\n                colorEmail:action.emailColor\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const updateEmail = (email) => ({type: UPDATE_TEXT_LOGIN, emailBody:email});\r\nexport const updatePassword = (password) => ({type: UPDATE_TEXT_PASSWORD, passwordBody:password});\r\nconst checkValidPassword=(password)=>({type:VALID_PASSWORD,passwordValid:password});\r\nconst checkValidEmail=(email,emailColor)=>({type:VALID_EMAIL,emailValid:email,emailColor:emailColor});\r\n\r\nexport const validEmail = (email) => {\r\n    return (dispatch) => {\r\n        if (!/.+@.+\\.[A-Za-z]+$/.test(email)) {\r\n            dispatch(checkValidEmail(false,'1px solid red'));\r\n        } else {\r\n            dispatch(checkValidEmail(true,'1px solid #c0e4f9'));\r\n        }\r\n    }\r\n};\r\n\r\nexport const auth=(email,password)=>{\r\n    return ()=>{\r\n        RegistrationAPI.putAthorization(email,password).then(response => {\r\n            console.log(response.data.data);\r\n        });\r\n    }\r\n};\r\nexport default AuthorezetionReducer;"]},"metadata":{},"sourceType":"module"}