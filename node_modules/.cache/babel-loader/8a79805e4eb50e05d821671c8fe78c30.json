{"ast":null,"code":"import classes from \"../components/header/header.module.css\";\nimport ContentReducer from \"./content-reducer\";\nconst ADD_POST = 'ADD-POST';\nconst ADD_SMS = 'ADD-SMS';\nconst UPDATE_NEW_SMS_TEXT = 'UPDATE-NEW-SMS-TEXT';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\nlet rerenderEntireTree = () => {\n  console.log('ffffff');\n};\n\nlet store = {\n  _state: {\n    friends: {\n      friend: [{\n        id: 1,\n        name: 'Marina'\n      }, {\n        id: 2,\n        name: 'Sveta'\n      }, {\n        id: 3,\n        name: 'Pasha'\n      }]\n    },\n    navigations: {\n      navigation: [{\n        id: 'profile',\n        name: 'Profile',\n        active: classes.active\n      }, {\n        id: 'dialog',\n        name: 'Dialog',\n        active: classes.active\n      }, {\n        id: 'news',\n        name: 'News',\n        active: classes.active\n      }, {\n        id: 'music',\n        name: 'Music',\n        active: classes.active\n      }, {\n        id: 'setting',\n        name: 'Setting',\n        active: classes.active\n      }]\n    },\n    profilePage: {\n      postData: [{\n        id: 1,\n        message: 'Hi Lerill',\n        like: 10\n      }, {\n        id: 1,\n        message: 'sdlfkkhfshlkj',\n        like: 5\n      }],\n      newPostText: '511'\n    },\n    messagePage: {\n      dialogsData: [{\n        id: 1,\n        name: 'Ivan'\n      }, {\n        id: 2,\n        name: 'Dima'\n      }, {\n        id: 3,\n        name: 'Gromik'\n      }],\n      newMessagePost: 'grom',\n      messagesData: [{\n        id: 1,\n        message: 'Hello, Ivan!!'\n      }, {\n        id: 2,\n        message: 'My name Kirill!!!'\n      }, {\n        id: 3,\n        message: 'Idi naxyi'\n      }]\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  rerenderEntireTree() {\n    console.log('ffffff');\n  },\n\n  subscribe(observer) {\n    this.rerenderEntireTree = observer;\n  },\n\n  dispatch(action) {\n    ContentReducer(_state.profilePage, action);\n\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        like: 5\n      };\n\n      this._state.profilePage.postData.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n      this.rerenderEntireTree(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n      this.rerenderEntireTree(this._state);\n    } else if (action.type === ADD_SMS) {\n      let newSms = {\n        id: 4,\n        message: this._state.messagePage.newMessagePost\n      };\n\n      this._state.messagePage.messagesData.push(newSms);\n\n      this._state.messagePage.newMessagePost = '';\n      this.rerenderEntireTree(this._state);\n    } else if (action.type === UPDATE_NEW_SMS_TEXT) {\n      this._state.messagePage.newMessagePost = action.newText;\n      this.rerenderEntireTree(this._state);\n    } else {\n      alert('Введи верно action');\n    }\n  }\n\n};\nexport const addSmsActionCreator = () => {\n  return {\n    type: ADD_SMS\n  };\n};\nexport const updateNewSmsActionCreator = text => {\n  return {\n    type: UPDATE_NEW_SMS_TEXT,\n    newText: text\n  };\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostActionCreator = sms => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: sms\n  };\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/cargo/my-app/src/redux/state.js"],"names":["classes","ContentReducer","ADD_POST","ADD_SMS","UPDATE_NEW_SMS_TEXT","UPDATE_NEW_POST_TEXT","rerenderEntireTree","console","log","store","_state","friends","friend","id","name","navigations","navigation","active","profilePage","postData","message","like","newPostText","messagePage","dialogsData","newMessagePost","messagesData","getState","subscribe","observer","dispatch","action","type","newPost","push","newText","newSms","alert","addSmsActionCreator","updateNewSmsActionCreator","text","addPostActionCreator","updateNewPostActionCreator","sms","window"],"mappings":"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","sourcesContent":["import classes from \"../components/header/header.module.css\";\r\nimport ContentReducer from \"./content-reducer\";\r\nconst ADD_POST = 'ADD-POST';\r\nconst ADD_SMS = 'ADD-SMS';\r\nconst UPDATE_NEW_SMS_TEXT = 'UPDATE-NEW-SMS-TEXT';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n let rerenderEntireTree=()=>\r\n {\r\n     console.log('ffffff');\r\n }\r\nlet store=\r\n    {\r\n        _state: {\r\n                friends: {\r\n                    friend: [\r\n                        {id: 1, name: 'Marina'},\r\n                        {id: 2, name: 'Sveta'},\r\n                        {id: 3, name: 'Pasha'}\r\n                    ]\r\n                },\r\n                navigations: {\r\n                    navigation: [\r\n                        {id: 'profile', name: 'Profile', active: classes.active},\r\n                        {id: 'dialog', name: 'Dialog', active: classes.active},\r\n                        {id: 'news', name: 'News', active: classes.active},\r\n                        {id: 'music', name: 'Music', active: classes.active},\r\n                        {id: 'setting', name: 'Setting', active: classes.active},\r\n                    ]\r\n                },\r\n                profilePage: {\r\n                    postData: [\r\n                        {id: 1, message: 'Hi Lerill', like: 10},\r\n                        {id: 1, message: 'sdlfkkhfshlkj', like: 5}\r\n                    ],\r\n                    newPostText:'511'},\r\n                messagePage: {\r\n                    dialogsData: [\r\n                        {id: 1, name: 'Ivan'},\r\n                        {id: 2, name: 'Dima'},\r\n                        {id: 3, name: 'Gromik'}\r\n                    ],\r\n                    newMessagePost:'grom',\r\n                    messagesData: [\r\n                        {id: 1, message: 'Hello, Ivan!!'},\r\n                        {id: 2, message: 'My name Kirill!!!'},\r\n                        {id: 3, message: 'Idi naxyi'}\r\n                    ]\r\n                }\r\n            },\r\n        getState(){\r\n            return this._state;\r\n        },\r\n        rerenderEntireTree() {\r\n            console.log('ffffff');\r\n        },\r\n        subscribe(observer) {\r\n           this.rerenderEntireTree = observer;\r\n        },\r\n        dispatch(action) {\r\n\r\n            ContentReducer(_state.profilePage,action);\r\n             if (action.type === ADD_POST)\r\n             {\r\n                 let newPost =\r\n                     {\r\n                         id:5,\r\n                         message:this._state.profilePage.newPostText,\r\n                         like:5\r\n                     };\r\n                 this._state.profilePage.postData.push(newPost);\r\n                 this._state.profilePage.newPostText='';\r\n                 this.rerenderEntireTree(this._state);\r\n             }\r\n             else if(action.type === UPDATE_NEW_POST_TEXT)\r\n                 {\r\n                     this._state.profilePage.newPostText = action.newText;\r\n                     this.rerenderEntireTree(this._state);\r\n                 }\r\n             else if(action.type === ADD_SMS)\r\n             {\r\n                 let newSms=\r\n                     {\r\n                         id:4,\r\n                         message: this._state.messagePage.newMessagePost\r\n                     };\r\n                 this._state.messagePage.messagesData.push(newSms);\r\n                 this._state.messagePage.newMessagePost='';\r\n                 this.rerenderEntireTree(this._state);\r\n             }\r\n             else if (action.type === UPDATE_NEW_SMS_TEXT)\r\n             {\r\n                 this._state.messagePage.newMessagePost = action.newText;\r\n                 this.rerenderEntireTree(this._state);\r\n             }\r\n             else\r\n                 {\r\n                     alert('Введи верно action');\r\n                 }\r\n        }\r\n    };\r\nexport const addSmsActionCreator = () =>\r\n{\r\n    return{type:ADD_SMS}\r\n}\r\nexport const updateNewSmsActionCreator=(text)=>\r\n{\r\n    return{type:UPDATE_NEW_SMS_TEXT,newText:text}\r\n}\r\nexport const addPostActionCreator = () =>\r\n{\r\n    return{type:ADD_POST}\r\n}\r\nexport const updateNewPostActionCreator=(sms)=>\r\n{\r\n    return{type:UPDATE_NEW_POST_TEXT ,newText:sms}\r\n}\r\n\r\nexport default store;\r\nwindow.store=store;"]},"metadata":{},"sourceType":"module"}