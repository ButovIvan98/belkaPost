{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\OSPanel\\\\domains\\\\cargo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { userAPI } from \"../API/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  idUser: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return _objectSpread({}, state, {}, action.data);\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserData = (idUser, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    idUser,\n    email,\n    login\n  }\n});\nexport const authMe = () => {\n  return dispatch => {\n    userAPI.getMe().then(response => {\n      if (response.resultCode == 0) {\n        let _response$data = response.data,\n            id = _response$data.id,\n            email = _response$data.email,\n            login = _response$data.login;\n        dispatch(setUserData(id, email, login));\n      }\n    });\n  };\n};\nexport default AuthReducer;","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/cargo/my-app/src/redux/auth-reducer.js"],"names":["userAPI","SET_USER_DATA","initialState","idUser","email","login","isAuth","AuthReducer","state","action","type","data","setUserData","authMe","dispatch","getMe","then","response","resultCode","id"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAuB,YAAvB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAC;AAJQ,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,+BACOO,KADP,MAEOC,MAAM,CAACE,IAFd;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH,CAVD;;AAWA,OAAO,MAAMI,WAAW,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,MAA2B;AAACK,EAAAA,IAAI,EAAET,aAAP;AAAsBU,EAAAA,IAAI,EAAC;AAACR,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB;AAA3B,CAA3B,CAApB;AACP,OAAO,MAAMQ,MAAM,GAAC,MAAI;AACpB,SAAQC,QAAD,IAAY;AACfd,IAAAA,OAAO,CAACe,KAAR,GAAgBC,IAAhB,CAAqBC,QAAQ,IAAI;AAC7B,UAAIA,QAAQ,CAACC,UAAT,IAAuB,CAA3B,EAA8B;AAAA,6BACHD,QAAQ,CAACN,IADN;AAAA,YACrBQ,EADqB,kBACrBA,EADqB;AAAA,YACjBf,KADiB,kBACjBA,KADiB;AAAA,YACVC,KADU,kBACVA,KADU;AAE1BS,QAAAA,QAAQ,CAACF,WAAW,CAACO,EAAD,EAAKf,KAAL,EAAYC,KAAZ,CAAZ,CAAR;AACH;AACJ,KALD;AAMH,GAPD;AAQH,CATM;AAUP,eAAeE,WAAf","sourcesContent":["import { userAPI} from \"../API/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    idUser: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth:false\r\n\r\n}\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const setUserData = (idUser, email, login) => ({type: SET_USER_DATA, data:{idUser, email, login}});\r\nexport const authMe=()=>{\r\n    return (dispatch)=>{\r\n        userAPI.getMe().then(response => {\r\n            if (response.resultCode == 0) {\r\n                let {id, email, login}=response.data;\r\n                dispatch(setUserData(id, email, login));\r\n            }\r\n        });\r\n    }\r\n};\r\nexport default AuthReducer;"]},"metadata":{},"sourceType":"module"}