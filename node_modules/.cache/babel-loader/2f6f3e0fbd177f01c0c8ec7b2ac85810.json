{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OSPanel\\\\domains\\\\cargo\\\\my-app\\\\src\\\\components\\\\users\\\\users-container.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentAC, setIsFetchingAC, setTotalUsersAC, setUsersAC, unFollowAC } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./users\";\n\nclass UsersAPIComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(pageNumber, \"&count=\").concat(this.props.pageSize)).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.setIsFetchingAC(true);\n    axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(this.props.currentPage, \"&count=\").concat(this.props.pageSize)).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(\"img\", {\n      src: \"https://cdn.dribbble.com/users/766394/screenshots/2257218/metaball-loader.gif\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.UsersPage.users,\n    pageSize: state.UsersPage.pageSize,\n    totalUsersCount: state.UsersPage.totalUsersCount,\n    currentPage: state.UsersPage.currentPage,\n    isFetching: state.UsersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userID => {\n      dispatch(followAC(userID));\n    },\n    unfollow: userID => {\n      dispatch(unFollowAC(userID));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: p => {\n      dispatch(setCurrentAC(p));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersAC(totalCount));\n    },\n    setIsFetching: isFetching => {\n      dispatch(setIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent);","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/cargo/my-app/src/components/users/users-container.js"],"names":["React","connect","followAC","setCurrentAC","setIsFetchingAC","setTotalUsersAC","setUsersAC","unFollowAC","axios","Users","UsersAPIComponent","Component","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","users","follow","unfollow","mapStateToProps","state","UsersPage","mapDispatchToProps","dispatch","userID","p","setIsFetching"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followAC,\r\n    setCurrentAC,\r\n    setIsFetchingAC,\r\n    setTotalUsersAC,\r\n    setUsersAC,\r\n    unFollowAC\r\n} from \"../../redux/users-reducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./users\";\r\nclass UsersAPIComponent extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setIsFetchingAC(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items);\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {\r\n                this.props.isFetching ? <img src='https://cdn.dribbble.com/users/766394/screenshots/2257218/metaball-loader.gif'/> : null\r\n            }\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage} onPageChanged={this.onPageChanged} users={this.props.users}\r\n                      follow={this.props.follow} unfollow={this.props.unfollow}/></>\r\n    }\r\n}\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        users:state.UsersPage.users,\r\n        pageSize: state.UsersPage.pageSize,\r\n        totalUsersCount:state.UsersPage.totalUsersCount,\r\n        currentPage:state.UsersPage.currentPage,\r\n        isFetching:state.UsersPage.isFetching\r\n    }\r\n};\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        follow:(userID)=>{\r\n            dispatch( followAC(userID));\r\n        },\r\n        unfollow:(userID)=>{\r\n            dispatch( unFollowAC(userID));\r\n        },\r\n        setUsers:(users)=>{\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage:(p)=>{\r\n            dispatch(setCurrentAC(p));\r\n        },\r\n        setTotalUsersCount:(totalCount)=>{\r\n            dispatch(setTotalUsersAC(totalCount));\r\n        },\r\n        setIsFetching:(isFetching)=>{\r\n        dispatch(setIsFetchingAC(isFetching))\r\n        }\r\n\r\n    }\r\n};\r\n export default connect(mapStateToProps,mapDispatchToProps)(UsersAPIComponent);"]},"metadata":{},"sourceType":"module"}