{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OSPanel\\\\domains\\\\cargo\\\\my-app\\\\src\\\\components\\\\users\\\\users-container.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentAC, setIsFetchingAC, setTotalUsersAC, setUsersAC, unFollowAC } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./users\";\nimport Preloader from \"../common/preloader/preloader\";\nimport { getUsers } from \"../../API/api\";\n\nclass UsersAPIComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(pageNumber, \"&count=\").concat(this.props.pageSize), {\n        withCredentials: true\n      }).then(response => {\n        this.props.setUsers(response.data.items);\n        this.props.setIsFetching(false);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.setIsFetching(true);\n    getUsers().then(response => {\n      this.props.setIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.UsersPage.users,\n    pageSize: state.UsersPage.pageSize,\n    totalUsersCount: state.UsersPage.totalUsersCount,\n    currentPage: state.UsersPage.currentPage,\n    isFetching: state.UsersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow: followAC,\n  unfollow: unFollowAC,\n  setUsers: setUsersAC,\n  setCurrentPage: setCurrentAC,\n  setTotalUsersCount: setTotalUsersAC,\n  setIsFetching: setIsFetchingAC\n})(UsersAPIComponent);","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/cargo/my-app/src/components/users/users-container.js"],"names":["React","connect","followAC","setCurrentAC","setIsFetchingAC","setTotalUsersAC","setUsersAC","unFollowAC","axios","Users","Preloader","getUsers","UsersAPIComponent","Component","onPageChanged","pageNumber","props","setIsFetching","setCurrentPage","get","pageSize","withCredentials","then","response","setUsers","data","items","componentDidMount","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","currentPage","users","follow","unfollow","mapStateToProps","state","UsersPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followAC,\r\n    setCurrentAC,\r\n    setIsFetchingAC,\r\n    setTotalUsersAC,\r\n    setUsersAC,\r\n    unFollowAC\r\n} from \"../../redux/users-reducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/preloader/preloader\";\r\nimport {getUsers} from \"../../API/api\";\r\nclass UsersAPIComponent extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setIsFetching(true);\r\n        getUsers()\r\n            .then(response => {\r\n            this.props.setIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,{withCredentials: true}).then(response => {\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setIsFetching(false);\r\n        })\r\n    };\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {\r\n                this.props.isFetching ? <Preloader /> : null\r\n            }\r\n            <Users totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage} onPageChanged={this.onPageChanged} users={this.props.users}\r\n                      follow={this.props.follow} unfollow={this.props.unfollow}/></>\r\n    }\r\n}\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        users:state.UsersPage.users,\r\n        pageSize: state.UsersPage.pageSize,\r\n        totalUsersCount:state.UsersPage.totalUsersCount,\r\n        currentPage:state.UsersPage.currentPage,\r\n        isFetching:state.UsersPage.isFetching\r\n    }\r\n};\r\n export default connect(mapStateToProps,{follow:followAC, unfollow:unFollowAC, setUsers:setUsersAC, setCurrentPage:setCurrentAC, setTotalUsersCount:setTotalUsersAC, setIsFetching:setIsFetchingAC})(UsersAPIComponent);"]},"metadata":{},"sourceType":"module"}