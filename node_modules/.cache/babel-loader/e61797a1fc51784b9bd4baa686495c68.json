{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\OSPanel\\\\domains\\\\moscow\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { RegistrationAPI, userAPI } from \"../API/api\";\nconst UPDATE_TEXT_LOGIN = 'UPDATE_TEXT_LOGIN';\nconst UPDATE_TEXT_PASSWORD = 'UPDATE_TEXT_PASSWORD';\nlet initialState = {\n  idUser: '',\n  email: '',\n  password: '122',\n  isAuth: false,\n  token: '',\n  validEmail: false\n};\n\nconst AuthorezetionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_TEXT_LOGIN:\n      return _objectSpread({}, state, {\n        email: action.emailBody\n      });\n\n    case UPDATE_TEXT_PASSWORD:\n      return _objectSpread({}, state, {\n        password: action.passwordBody\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const updateEmail = email => ({\n  type: UPDATE_TEXT_LOGIN,\n  emailBody: email\n});\nexport const updatePassword = password => ({\n  type: UPDATE_TEXT_PASSWORD,\n  passwordBody: password\n});\nexport const validPassword = password => {\n  return dispatch => {\n    if (!/[a-zA-Z0-9]/.test(password) || password.length < 6) {\n      dispatch(checkValidPassword(false, '1px solid red'));\n    } else {\n      dispatch(checkValidPassword(true, '1px solid #c0e4f9'));\n    }\n  };\n};\nexport const auth = (email, password) => {\n  return () => {\n    RegistrationAPI.putAthorization(email, password).then(response => {\n      console.log(response.data.data);\n    });\n  };\n};\nexport default AuthorezetionReducer;","map":{"version":3,"sources":["C:/Users/user/OSPanel/domains/moscow/src/redux/authReducer.js"],"names":["RegistrationAPI","userAPI","UPDATE_TEXT_LOGIN","UPDATE_TEXT_PASSWORD","initialState","idUser","email","password","isAuth","token","validEmail","AuthorezetionReducer","state","action","type","emailBody","passwordBody","updateEmail","updatePassword","validPassword","dispatch","test","length","checkValidPassword","auth","putAthorization","then","response","console","log","data"],"mappings":";;;;;;AAAA,SAAQA,eAAR,EAAyBC,OAAzB,QAAuC,YAAvC;AAEA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,EADO;AAEfC,EAAAA,KAAK,EAAE,EAFQ;AAGfC,EAAAA,QAAQ,EAAE,KAHK;AAIfC,EAAAA,MAAM,EAAE,KAJO;AAKfC,EAAAA,KAAK,EAAC,EALS;AAMfC,EAAAA,UAAU,EAAC;AANI,CAAnB;;AASA,MAAMC,oBAAoB,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,iBAAL;AACI,+BACOU,KADP;AAEIN,QAAAA,KAAK,EAACO,MAAM,CAACE;AAFjB;;AAIJ,SAAKZ,oBAAL;AACI,+BACOS,KADP;AAEIL,QAAAA,QAAQ,EAACM,MAAM,CAACG;AAFpB;;AAIJ;AACI,aAAOJ,KAAP;AAZR;AAcH,CAfD;;AAgBA,OAAO,MAAMK,WAAW,GAAIX,KAAD,KAAY;AAACQ,EAAAA,IAAI,EAAEZ,iBAAP;AAA0Ba,EAAAA,SAAS,EAACT;AAApC,CAAZ,CAApB;AACP,OAAO,MAAMY,cAAc,GAAIX,QAAD,KAAe;AAACO,EAAAA,IAAI,EAAEX,oBAAP;AAA6Ba,EAAAA,YAAY,EAACT;AAA1C,CAAf,CAAvB;AAEP,OAAO,MAAMY,aAAa,GAAEZ,QAAD,IAAY;AACnC,SAAQa,QAAD,IAAc;AACjB,QAAI,CAAC,cAAcC,IAAd,CAAmBd,QAAnB,CAAD,IAAiCA,QAAQ,CAACe,MAAT,GAAkB,CAAvD,EAA0D;AACtDF,MAAAA,QAAQ,CAACG,kBAAkB,CAAC,KAAD,EAAO,eAAP,CAAnB,CAAR;AACH,KAFD,MAEO;AACHH,MAAAA,QAAQ,CAACG,kBAAkB,CAAC,IAAD,EAAM,mBAAN,CAAnB,CAAR;AACH;AACJ,GAND;AAOH,CARM;AAUP,OAAO,MAAMC,IAAI,GAAC,CAAClB,KAAD,EAAOC,QAAP,KAAkB;AAChC,SAAO,MAAI;AACPP,IAAAA,eAAe,CAACyB,eAAhB,CAAgCnB,KAAhC,EAAsCC,QAAtC,EAAgDmB,IAAhD,CAAqDC,QAAQ,IAAI;AAC7DC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcA,IAA1B;AACH,KAFD;AAGH,GAJD;AAKH,CANM;AAOP,eAAenB,oBAAf","sourcesContent":["import {RegistrationAPI, userAPI} from \"../API/api\";\r\n\r\nconst UPDATE_TEXT_LOGIN = 'UPDATE_TEXT_LOGIN';\r\nconst UPDATE_TEXT_PASSWORD = 'UPDATE_TEXT_PASSWORD';\r\n\r\nlet initialState = {\r\n    idUser: '',\r\n    email: '',\r\n    password: '122',\r\n    isAuth: false,\r\n    token:'',\r\n    validEmail:false,\r\n\r\n}\r\nconst AuthorezetionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_TEXT_LOGIN:\r\n            return {\r\n                ...state,\r\n                email:action.emailBody\r\n            };\r\n        case UPDATE_TEXT_PASSWORD:\r\n            return {\r\n                ...state,\r\n                password:action.passwordBody\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const updateEmail = (email) => ({type: UPDATE_TEXT_LOGIN, emailBody:email});\r\nexport const updatePassword = (password) => ({type: UPDATE_TEXT_PASSWORD, passwordBody:password});\r\n\r\nexport const validPassword=(password)=>{\r\n    return (dispatch) => {\r\n        if (!/[a-zA-Z0-9]/.test(password) || password.length < 6) {\r\n            dispatch(checkValidPassword(false,'1px solid red'));\r\n        } else {\r\n            dispatch(checkValidPassword(true,'1px solid #c0e4f9'));\r\n        }\r\n    }\r\n}\r\n\r\nexport const auth=(email,password)=>{\r\n    return ()=>{\r\n        RegistrationAPI.putAthorization(email,password).then(response => {\r\n            console.log(response.data.data);\r\n        });\r\n    }\r\n};\r\nexport default AuthorezetionReducer;"]},"metadata":{},"sourceType":"module"}